Link:
https://www.codewars.com/kata/582001237a3a630ce8000a41/sql

Description:

Given the schema presented below write a query, which uses a window function, that returns two most viewed posts for every category.

Order the result set by:

category name alphabetically
number of post views largest to lowest
post id lowest to largest
Note:

Some categories may have less than two or no posts at all.
Two or more posts within the category can be tied by (have the same) the number of views. Use post id as a tie breaker - a post with a lower id gets a higher rank.
Schema

categories

 Column     | Type                        | Modifiers
------------+-----------------------------+----------
id          | integer                     | not null
category    | character varying(255)      | not null
posts

 Column     | Type                        | Modifiers
------------+-----------------------------+----------
id          | integer                     | not null
category_id | integer                     | not null
title       | character varying(255)      | not null
views       | integer                     | not null
Desired Output

The desired output should look like this:

category_id | category | title                             | views | post_id
------------+----------+-----------------------------------+-------+--------
5           | art      | Most viewed post about Art        | 9234  | 234
5           | art      | Second most viewed post about Art | 9234  | 712
2           | business | NULL                              | NULL  | NULL
7           | sport    | Most viewed post about Sport      | 10    | 126
...
category_id - category id
category - category name
title - post title
views - the number of post views
post_id - post id

Solution:

select category_id, category, title, views, post_id
from (
select category_id, category, title, p.views, p.id as post_id, dense_rank() over (partition by category_id order by p.views desc, p.id) as n
from categories c
join posts p on c.id=p.category_id
) t
where n=1 or n=2
union all
select id as category_id, category, NULL as title, NULL as views, NULL as post_id
from categories
where id not in (
select category_id
  from posts
)
order by category, views desc, post_id
